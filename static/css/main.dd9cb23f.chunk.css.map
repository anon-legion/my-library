{"version":3,"sources":["main.dd9cb23f.chunk.css","webpack://src/index.css","webpack://src/App.css"],"names":[],"mappings":"AAAA,wEAAwE,CCGxE,EACE,8BAIF,CAYA,cAHE,qBASF,CANA,SACE,gBAAiB,CAGjB,YAAa,CACb,qBACF,CAEA,0BACE,KACE,yBACF,CACF,CChCA,EACI,qBAAsB,CACtB,SAAU,CACV,QACJ,CAEA,KACI,WAAY,CAEZ,QACJ,CAGA,mBACI,UAAW,CACX,WACJ,CAEA,yBAEI,uCACJ,CAOA,8BACI,0CACJ,CAGA,0BAEI,SACI,YACJ,CAGA,aACI,YAAa,CACb,UACJ,CAEA,oBACI,YAAa,CACb,wBACJ,CAEA,UACI,QACJ,CAEA,GACI,wBACJ,CAEA,UACA,yBAA0B,CAC1B,aAAc,CACd,eAAiB,CACjB,iBAAkB,CAClB,eAAgB,CAChB,eAAgB,CAChB,qBACA,CACJ,CAGA,0BACI,sCAEI,WACJ,CACJ,CAEA,oBAGI,mBACJ,CAMA,gBACE,uBAAgB,CAAhB,eAAgB,CAChB,SAAU,CACV,4BAA6B,CAC7B,SACF","file":"main.dd9cb23f.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Kanit&display=swap);\n/* CSS reset */\n* {\n  font-family: 'Kanit', sans-serif;\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\n\n/*\n  if height value is not set on html and body,\n  it will assume the same value given to children\n  that is explicitly assigned a value (i.e. div#root)\n*/\nhtml {  \n  background-color: black;\n}\n\ndiv#root {\n  min-height: 100vh;\n  /* min-height: -webkit-fill-available; */\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n}\n\n@media (min-width: 1024px) {\n  html {\n    overflow: hidden!important;\n  }\n}\n* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nmain {\n    height: 100%;\n    /* fills remaining height of parent; requires parent display: flex */\n    flex: 1 1;\n}\n\n/* keeps newBook component at bottom */\nmain > div.container {\n    width: 100%;\n    flex-grow: 0;\n}\n\ninput:focus,\nselect:focus {\n    box-shadow: 0 0 2px 1.5px gold!important;\n}\n\n/*\n    highlights invalid input if value is not empty\n    :not([value='']) prevents style from being applied\n    on required inputs that are empty\n*/\ninput:invalid:not([value='']) {\n    box-shadow: 0 0 2px 1.5px #9A6AFF!important;\n}\n\n/* for mobile only */\n@media (max-width: 1024px) {\n    /* display for desktop only, hide on mobile */\n    .desktop {\n        display: none;\n    }\n    \n    /* arranges td as column in the tr */\n    .mobile-flex {\n        display: flex;\n        width: 100%;\n    }\n\n    .mobile-flex-button {\n        display: flex;\n        justify-content: flex-end;\n    }\n\n    .table td {\n        border: 0px;\n    }\n\n    tr {\n        border: 1px solid #DBDBDB;\n    }\n    /* adds faux-headers on each td by reading \"data-header\" attribute of the td*/\n    td:before {\n    content: attr(data-header);\n    display: block;\n    font-weight: bold;\n    margin-right: 10px;\n    max-width: 110px;\n    min-width: 110px;\n    word-break: break-word;\n    }\n}\n\n/* for desktop only */\n@media (min-width: 1025px){\n    td:nth-child(-n+2),\n    th:nth-child(-n+2) {\n        width: 33.5%;\n    }\n}\n\ninput,\nselect,\noption {\n    font-family: inherit;\n}\n\n/*\n  keeps footer at the bottom of page\n  requires div#root min-height 100vh\n*/\ndiv#root > footer {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 100vh;\n  background-color: transparent;\n  z-index: 2;\n}\n","@import url('https://fonts.googleapis.com/css2?family=Kanit&display=swap');\n\n/* CSS reset */\n* {\n  font-family: 'Kanit', sans-serif;\n  box-sizing: border-box;\n  padding: 0;\n  margin: 0;\n}\n\n\n/*\n  if height value is not set on html and body,\n  it will assume the same value given to children\n  that is explicitly assigned a value (i.e. div#root)\n*/\nhtml {  \n  background-color: black;\n}\n\ndiv#root {\n  min-height: 100vh;\n  /* min-height: -webkit-fill-available; */\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n}\n\n@media (min-width: 1024px) {\n  html {\n    overflow: hidden!important;\n  }\n}","* {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\nmain {\n    height: 100%;\n    /* fills remaining height of parent; requires parent display: flex */\n    flex: 1;\n}\n\n/* keeps newBook component at bottom */\nmain > div.container {\n    width: 100%;\n    flex-grow: 0;\n}\n\ninput:focus,\nselect:focus {\n    box-shadow: 0 0 2px 1.5px gold!important;\n}\n\n/*\n    highlights invalid input if value is not empty\n    :not([value='']) prevents style from being applied\n    on required inputs that are empty\n*/\ninput:invalid:not([value='']) {\n    box-shadow: 0 0 2px 1.5px #9A6AFF!important;\n}\n\n/* for mobile only */\n@media (max-width: 1024px) {\n    /* display for desktop only, hide on mobile */\n    .desktop {\n        display: none;\n    }\n    \n    /* arranges td as column in the tr */\n    .mobile-flex {\n        display: flex;\n        width: 100%;\n    }\n\n    .mobile-flex-button {\n        display: flex;\n        justify-content: flex-end;\n    }\n\n    .table td {\n        border: 0px;\n    }\n\n    tr {\n        border: 1px solid #DBDBDB;\n    }\n    /* adds faux-headers on each td by reading \"data-header\" attribute of the td*/\n    td:before {\n    content: attr(data-header);\n    display: block;\n    font-weight: bold;\n    margin-right: 10px;\n    max-width: 110px;\n    min-width: 110px;\n    word-break: break-word;\n    }\n}\n\n/* for desktop only */\n@media (min-width: 1025px){\n    td:nth-child(-n+2),\n    th:nth-child(-n+2) {\n        width: 33.5%;\n    }\n}\n\ninput,\nselect,\noption {\n    font-family: inherit;\n}\n\n/*\n  keeps footer at the bottom of page\n  requires div#root min-height 100vh\n*/\ndiv#root > footer {\n  position: sticky;\n  top: 100vh;\n  background-color: transparent;\n  z-index: 2;\n}"]}