{"version":3,"sources":["components/libraryContext.js","components/library.js","components/newBook.js","components/Footer.js","App.js","index.js"],"names":["lettersFromAStoic","title","author","isRead","isOwned","theOdyssey","thePrince","LibraryContext","createContext","initBookState","useLibraryContext","useContext","LibraryProvider","children","useState","myLibrary","setMyLibrary","bookIndex","bookState","editBook","setEditBook","stateContext","useMemo","Provider","value","HEADER","TITLE","AUTHOR","PROGRESS","STATUS","Library","selectedRowId","setSelectedRowId","useEffect","trOnDoubleClick","useCallback","i","className","Object","values","map","label","onDoubleClick","NewBookForm","newBook","setNewBook","inputRef","useRef","validate","element","current","newTitle","findIndex","book","toLowerCase","isDuplicate","setCustomValidity","forEach","selectedIndex","args","setSelectNodes","inputOnChange","e","prevState","target","name","selectOnChange","onSubmit","preventDefault","books","htmlFor","ref","el","type","id","placeholder","onChange","required","progress","defaultValue","status","currentYear","Date","getFullYear","Footer","href","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.352e4d07.chunk.js","sourcesContent":["import React, { useState, createContext, useContext, useMemo } from 'react';\n// import PropTypes from 'prop-types';\n\nconst lettersFromAStoic = {\n  title: 'Letters from a Stoic',\n  author: 'Seneca',\n  isRead: true,\n  isOwned: true,\n};\nconst theOdyssey = {\n  title: 'The Odyssey',\n  author: 'Homer',\n  isRead: false,\n  isOwned: true,\n};\nconst thePrince = {\n  title: 'The Prince',\n  author: 'Niccolo Machiavelli',\n  isRead: true,\n  isOwned: true,\n};\n\nconst LibraryContext = createContext();\n\nexport const initBookState = {\n  title: '',\n  author: '',\n  isRead: false,\n  isOwned: false,\n};\n\nexport function useLibraryContext() {\n  return useContext(LibraryContext);\n}\n\nexport function LibraryProvider({ children }) {\n  const [myLibrary, setMyLibrary] = useState(() => [lettersFromAStoic, theOdyssey, thePrince]);\n\n  const [editBook, setEditBook] = useState(() => ({\n    bookIndex: -1,\n    bookState: initBookState,\n  }));\n\n  // memoized states being passed as context to avoid unnecessary re-rendering\n  const stateContext = useMemo(() => (\n    { myLibrary, editBook, setMyLibrary, setEditBook }\n  ), [myLibrary, editBook]);\n\n  return (\n    <LibraryContext.Provider value={stateContext}>\n      {children}\n    </LibraryContext.Provider>\n  );\n}\n\n// LibraryProvider.propTypes = { children: PropTypes.element.isRequired };\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { initBookState, useLibraryContext } from './libraryContext';\nimport 'bulma/css/bulma.min.css';\nimport '../App.css';\n\nconst HEADER = {\n  TITLE: 'Title',\n  AUTHOR: 'Author',\n  PROGRESS: 'Progress',\n  STATUS: 'Status',\n};\n\nfunction Library() {\n  const { myLibrary, setEditBook } = useLibraryContext();\n\n  // state storing selected row ID used for <tr> className to highlight selected row\n  const [selectedRowId, setSelectedRowId] = useState(() => null);\n\n  useEffect(() => {\n    // reset editBook state to default on myLibrary re-render\n    // allows newBook form to reset after editing a book in myLibrary\n    setEditBook(() => ({\n      bookIndex: -1,\n      bookState: initBookState,\n    }));\n    // reset selectedRowId to remove highlight of selected row after edit\n    setSelectedRowId(() => null);\n  }, [myLibrary, setEditBook]);\n\n  const trOnDoubleClick = useCallback((i) => {\n    // e refers to event and i the index given during mapping, used by <tr>\n    setSelectedRowId(() => i);\n    setEditBook(() => ({\n      bookIndex: i,\n      bookState: { ...myLibrary[i] },\n    }));\n  }, [myLibrary]);\n\n  return (\n    <table className=\"table is-fullwidth is-hoverable\">\n      <thead>\n        <tr>\n          {Object.values(HEADER).map((label) => <th className=\"desktop\" key={label}>{label}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {myLibrary.map(({ title, author, isRead, isOwned }, i) => (\n          // className is changed if selectedRowId is changed to i\n          // i is passed in together with event (e) onDoubleClick\n          <tr className={selectedRowId === i ? 'is-selected' : null} key={title} onDoubleClick={() => trOnDoubleClick(i)}>\n            <td className=\"mobile-flex\" data-header={HEADER.TITLE}>{title}</td>\n            <td className=\"mobile-flex\" data-header={HEADER.AUTHOR}>{author}</td>\n            <td className=\"mobile-flex\" data-header={HEADER.PROGRESS}>{isRead ? 'Read' : 'Unread'}</td>\n            <td className=\"mobile-flex\" data-header={HEADER.STATUS}>{isOwned ? 'Acquired' : 'Lacking'}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Library;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useLibraryContext, initBookState } from './libraryContext';\nimport 'bulma/css/bulma.min.css';\nimport '../App.css';\n\nfunction NewBookForm() {\n  const { myLibrary, setMyLibrary, editBook } = useLibraryContext();\n\n  const [newBook, setNewBook] = useState(() => initBookState);\n\n  // reference to the dropdown menus of form\n  // initialize as object to reference multiple elements\n  const inputRef = useRef({});\n\n  // set the values of select tags based on boolean values from isRead and isOwned\n  // helper function used by useEffect\n  // takes in two booleans 'read' and 'owned' positionally\n  function setSelectNodes(...args) {\n    Object.values(inputRef.current).forEach((element, i) => {\n      const node = element;\n      node.selectedIndex = args[i] ? '0' : '1';\n    });\n  }\n\n  // helper function used by validate()\n  const isDuplicate = (newTitle) => {\n    const duplicateTitleIndex = myLibrary.findIndex(\n      // find index of book with same title that is not the same book being edited\n      (book, i) => book.title.toLowerCase() === newTitle && i !== editBook.bookIndex,\n    );\n    return duplicateTitleIndex >= 0;\n  };\n\n  // custom form validation to check if title already exists in myLibrary\n  // helper function for newBook.title useEffect\n  const validate = () => {\n    const element = inputRef.current.title;\n    const newTitle = newBook.title.toLowerCase();\n    if (isDuplicate(newTitle)) {\n      inputRef.current.title.setCustomValidity('Title already exists');\n      return;\n    }\n    element.setCustomValidity('');\n  };\n\n  // validate title on change of newBook.title input\n  useEffect(() => validate(), [newBook.title]);\n\n  useEffect(() => {\n    // reset form on successful submit of newBook to myLibrary and on first render\n    if (editBook.bookIndex < 0) {\n      setNewBook(() => initBookState);\n      // initialize all <select> nodes to none/null option\n      Object.values(inputRef.current).forEach((element) => {\n        // 'element' and 'node' are references to the same DOM node\n        // but modifying 'node' vs 'element' doesn't mutate the 'arguments' object of the function\n        // arguments[0] remains just a reference to the DOM node element\n        const node = element;\n        node.selectedIndex = '-1';\n      });\n    } else {\n      // fill newBook form with editBook state to edit existing book\n      setNewBook(() => editBook.bookState);\n      setSelectNodes(editBook.bookState.isRead, editBook.bookState.isOwned);\n    }\n  }, [myLibrary, editBook]);\n\n  const handleSubmit = (e) => {\n    // used by form to either create new book or edit existing and preventing default form submit\n    e.preventDefault();\n    if (editBook.bookIndex === -1) {\n      // create new book\n      setMyLibrary((prevState) => [newBook, ...prevState]);\n    } else {\n      // creating shallow copy of myLibrary to edit book\n      const books = [...myLibrary];\n      books[editBook.bookIndex] = { ...newBook };\n      setMyLibrary(() => [...books]);\n    }\n  };\n\n  const inputOnChange = useCallback((e) => {\n    setNewBook((prevState) => ({ ...prevState, [e.target.name]: e.target.value }));\n  }, []);\n\n  // handler used by <select> to convert \"true\" or \"false\" values to boolean since\n  const selectOnChange = useCallback((e) => {\n    setNewBook((prevState) => ({ ...prevState, [e.target.name]: e.target.value === 'true' }));\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"columns\">\n        <div className=\"column is-4\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"inputTitle\">Title</label>\n            <div className=\"control\">\n              <input\n                // add element to inputRef.current object with key of 'title'\n                ref={(el) => { inputRef.current.title = el; }}\n                className=\"input\"\n                type=\"text\"\n                id=\"inputTitle\"\n                placeholder=\"Book\"\n                name=\"title\"\n                value={newBook.title}\n                onChange={inputOnChange}\n                required\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"column is-4\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"inputAuthor\">Author</label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                id=\"inputAuthor\"\n                placeholder=\"Name\"\n                name=\"author\"\n                value={newBook.author}\n                onChange={inputOnChange}\n                required\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"selectProgress\">Progress</label>\n            <div className=\"control\">\n              <div className=\"select\">\n                <select\n                  // add element to inputRef.current object with key of 'progress'\n                  ref={(el) => { inputRef.current.progress = el; }}\n                  id=\"selectProgress\"\n                  defaultValue={null}\n                  name=\"isRead\"\n                  onChange={selectOnChange}\n                  required\n                >\n                  <option value>Read</option>\n                  <option value={false}>Unread</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"column is-2\">\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"selectStatus\">Status</label>\n            <div className=\"control\">\n              <div className=\"select\">\n                <select\n                  // add element to inputRef.current object with key of 'status'\n                  ref={(el) => { inputRef.current.status = el; }}\n                  id=\"selectStatus\"\n                  defaultValue={null}\n                  name=\"isOwned\"\n                  onChange={selectOnChange}\n                  required\n                >\n                  <option value>Acquired</option>\n                  <option value={false}>Lacking</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"mobile-flex-button\">\n        <button className=\"button is-link is-outlined is-inverted has-text-weight-semibold\" type=\"submit\">Submit</button>\n      </div>\n    </form>\n  );\n}\n\nexport default NewBookForm;\n","import React from 'react';\nimport { FaGithub } from 'react-icons/fa';\n\nconst currentYear = new Date().getFullYear();\n\nexport default function Footer() {\n  return (\n    <footer className=\"is-flex is-justify-content-center\">\n      <a href=\"https://github.com/anon-legion\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n        <p className=\"is-clickable is-size-5 has-text-grey-dark\">\n          {`Copyright © 2021-${currentYear} =GV=`}\n          <span className=\"icon-text\">\n            <span className=\"icon is-medium has-text-grey-dark\">\n              <FaGithub />\n            </span>\n          </span>\n        </p>\n      </a>\n    </footer>\n  );\n}\n","import React from 'react';\nimport Library from './components/library';\nimport NewBookForm from './components/newBook';\nimport Footer from './components/Footer';\nimport { LibraryProvider } from './components/libraryContext';\nimport 'bulma/css/bulma.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <header className=\"hero\">\n        <div className=\"hero-body has-text-centered py-5\">\n          <h1 className=\"title is-1 is-size-3-mobile has-text-primary\">Odin Book Library</h1>\n          <p className=\"subtitle is-2 is-size-4-mobile has-text-white-ter\">My personal book collection</p>\n        </div>\n      </header>\n      <main className=\"section is-flex is-flex-direction-column is-justify-content-space-between pt-4\">\n        <LibraryProvider>\n          <div className=\"container\">\n            <div className=\"box has-background-info\">\n              <Library />\n            </div>\n          </div>\n          <div className=\"container mt-4\">\n            <span className=\"is-size-5 is-size-6-mobile has-text-white-ter\">Add/Edit Book (double click row to edit)</span>\n            <div className=\"box has-background-info\">\n              <NewBookForm />\n            </div>\n          </div>\n        </LibraryProvider>\n      </main>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}