* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

main {
    height: 100%;
    /* fills remaining height of parent; requires parent display: flex */
    flex: 1;
}

/* keeps newBook component at bottom */
main > div.container {
    width: 100%;
    flex-grow: 0;
}

input:focus,
select:focus {
    box-shadow: 0 0 2px 1.5px gold!important;
}

/*
    highlights invalid input if value is not empty
    :not([value='']) prevents style from being applied
    on required inputs that are empty
*/
input:invalid:not([value='']) {
    box-shadow: 0 0 2px 1.5px #9A6AFF!important;
}

/* for mobile only */
@media (max-width: 1024px) {
    /* display for desktop only, hide on mobile */
    .desktop {
        display: none;
    }
    
    /* arranges td as column in the tr */
    .mobile-flex {
        display: flex;
        width: 100%;
    }

    .mobile-flex-button {
        display: flex;
        justify-content: flex-end;
    }

    .table td {
        border: 0px;
    }

    tr {
        border: 1px solid #DBDBDB;
    }
    /* adds faux-headers on each td by reading "data-header" attribute of the td*/
    td:before {
    content: attr(data-header);
    display: block;
    font-weight: bold;
    margin-right: 10px;
    max-width: 110px;
    min-width: 110px;
    word-break: break-word;
    }
}

/* for desktop only */
@media (min-width: 1025px){
    td:nth-child(-n+2),
    th:nth-child(-n+2) {
        width: 33.5%;
    }
}

input,
select,
option {
    font-family: inherit;
}

/*
  keeps footer at the bottom of page
  requires div#root min-height 100vh
*/
div#root > footer {
  position: sticky;
  top: 100vh;
  background-color: transparent;
  z-index: 2;
}